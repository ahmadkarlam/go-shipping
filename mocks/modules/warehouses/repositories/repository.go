// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ahmadkarlam/go-shipping/modules/warehouses/repositories (interfaces: WarehouseRepository)

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "github.com/ahmadkarlam/go-shipping/modules/warehouses/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockWarehouseRepository is a mock of WarehouseRepository interface
type MockWarehouseRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWarehouseRepositoryMockRecorder
}

// MockWarehouseRepositoryMockRecorder is the mock recorder for MockWarehouseRepository
type MockWarehouseRepositoryMockRecorder struct {
	mock *MockWarehouseRepository
}

// NewMockWarehouseRepository creates a new mock instance
func NewMockWarehouseRepository(ctrl *gomock.Controller) *MockWarehouseRepository {
	mock := &MockWarehouseRepository{ctrl: ctrl}
	mock.recorder = &MockWarehouseRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWarehouseRepository) EXPECT() *MockWarehouseRepositoryMockRecorder {
	return m.recorder
}

// DecreaseStock mocks base method
func (m *MockWarehouseRepository) DecreaseStock(arg0 models.Warehouse) (models.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecreaseStock", arg0)
	ret0, _ := ret[0].(models.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecreaseStock indicates an expected call of DecreaseStock
func (mr *MockWarehouseRepositoryMockRecorder) DecreaseStock(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecreaseStock", reflect.TypeOf((*MockWarehouseRepository)(nil).DecreaseStock), arg0)
}

// FindById mocks base method
func (m *MockWarehouseRepository) FindById(arg0 uint) (models.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindById", arg0)
	ret0, _ := ret[0].(models.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindById indicates an expected call of FindById
func (mr *MockWarehouseRepositoryMockRecorder) FindById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindById", reflect.TypeOf((*MockWarehouseRepository)(nil).FindById), arg0)
}

// GetAll mocks base method
func (m *MockWarehouseRepository) GetAll() ([]models.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockWarehouseRepositoryMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockWarehouseRepository)(nil).GetAll))
}
